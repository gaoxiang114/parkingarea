<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyou.library.xh.*.dao">

	<resultMap type="DataBean" id="dataBeanMap">
		<id property="id" column="id"/>
		<result property="displayName" column="display_name"/>
		<result property="num" column="num"/>
		<result property="userId" column="user_id"/>
		<result property="userName" column="user_num"/>
		<result property="realName" column="user_realname"/>
		<result property="department" column="user_department"/>
		<result property="bookName" column="book_name"/>
		<result property="bookAuthor" column="book_author"/>
		<result property="bookType" column="type_name"/>
		<result property="bookId" column="book_id"/>
		<result property="recDate" column="rec_date"/>
		<result property="price" column="price"/>
	</resultMap>
	
	<sql id="countBorrow">
		select tbw.user_id,tu.user_num user_num,tu.user_realname user_realname,tu.user_department user_department,count(*) num 
		from t_borrow tbw
		join t_user tu on tu.user_id=tbw.user_id
		join t_book tb on tb.book_id=tbw.book_id
		<where>
			<if test="department!=null"> tu.user_department=#{department}</if>
			<if test="startDate!=null and endDate!=null"> and (tbw.check_starttime &gt;= #{startDate} and tbw.check_starttime &lt;= #{endDate})</if>
		</where>
		group by tu.user_num,tu.user_realname,tu.user_department 
	</sql>
	
	<sql id="countBorrowBook">
		select tb.book_name book_name,tb.book_author book_author,tbt.type_name type_name,count(*) num,user_realname from t_borrow tbw
		join t_user tu on tu.user_id=tbw.user_id
		join t_book tb on tb.book_id=tbw.book_id
		join t_booktype tbt on tbt.type_id=tb.type_id
		
		<where>
			<if test="typeId!=null">  tbt.type_id=#{typeId}</if>
			<if test="startDate!=null and endDate!=null"> and (tbw.check_starttime &gt;= #{startDate} and tbw.check_starttime &lt;= #{endDate})</if>
		</where>
		
		group by tb.book_name,tb.book_author,tbt.type_name,tu.user_realname
		order by count(*) desc
	</sql>
	
	<sql id="purchaseSql">
		select tb.book_id book_id,tb.book_name book_name,tr.rec_date rec_date,tr.book_price price from t_recommend tr
		join t_book tb on tb.book_name=tr.book_name
		<where>
			<if test="startDate!=null and endDate!=null"> and (tr.rec_date &gt;= #{startDate} and tr.rec_date &lt;= #{endDate})</if>
		</where>
		group by tb.book_id,tb.book_name,tr.rec_date,tr.book_price
	</sql>
	
	<select id="countBookByType" resultMap="dataBeanMap">
		select tt.type_name display_name,count(*) num from t_book tb
		join t_booktype tt on tt.type_id=tb.type_id
		group by tt.type_id,tt.type_name
	</select>
	
	<select id="countBorrowState" resultMap="dataBeanMap" parameterType="java.util.Map">
		<include refid="countBorrow"/> limit #{pageIndex},#{pageSize}
	</select>
	
	<select id="getBookNameByUserId" parameterType="int" resultType="java.lang.String">
		select tb.book_name from t_borrow tbw
		join t_book tb on tb.book_id=tbw.book_id
		where tbw.user_id = #{user_id} group by tb.book_name
	</select>
	
	<select id="allBorrowRecords" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*) from (<include refid="countBorrow"/>) tp
	</select>
	
	<select id="countBorrowByBook" resultMap="dataBeanMap" parameterType="java.util.Map">
		<include refid="countBorrowBook"/>  limit #{pageIndex},#{pageSize}
	</select>
	
	<select id="allBorrowByBook" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*) from (<include refid="countBorrowBook"/>) tp
	</select>
	
	<select id="countBorrowByType" resultMap="dataBeanMap" parameterType="DataBean">
		select tbt.type_name type_name,count(*) num from t_borrow tbw
		join t_book tb on tb.book_id=tbw.book_id
		join t_booktype tbt on tbt.type_id=tb.type_id
		
		<where>
			<if test="startDate!=null and endDate!=null"> and (tbw.check_starttime &gt;= #{startDate} and tbw.check_starttime &lt;= #{endDate})</if>
		</where>
		
		group by tbt.type_name
		order by count(*) desc
	</select>
	
	<select id="purchaseCount" resultMap="dataBeanMap" parameterType="java.util.Map">
		<include refid="purchaseSql"/> limit #{pageIndex},#{pageSize}
	</select>
	
	<select id="getPurchaseRecord" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*) from(<include refid="purchaseSql"/>) tp
	</select>
	
</mapper>