<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyou.library.xh.user.dao.UserDao">

	<resultMap type="User" id="userMap">
		<id property="user_id" column="user_id"></id>
		<id property="user_num" column="user_num"></id>
		<id property="user_password" column="user_password"></id>
		<id property="user_mail" column="user_mail" /> 
		<id property="user_realname" column="user_realname"/>
		<id property="user_department" column="user_department"/>
		<id property="user_borrownum" column="user_borrownum"/>
		<id property="user_ordernum" column="user_ordernum"/>
	</resultMap>
	
	<sql id="selectColumn">
		select user_id,user_num,user_password,user_mail,user_realname,user_department,user_borrownum,user_ordernum from t_user
	</sql>

	<insert id="addUser" parameterType="User">
		insert into t_user(user_num,user_mail,user_realname,user_department) values(#{user_num},#{user_mail},#{user_realname},#{user_department});
	</insert>
	
	<select id="getUserByUserNum" parameterType="User" resultMap="userMap">
		<include refid="selectColumn"/> where user_num = #{user_num};
	</select>
	
	<select id="getUserByUserId" parameterType="User" resultMap="userMap">
		<include refid="selectColumn"/> where user_id = #{user_id};
	</select>
	<select id="getUserById" parameterType="User" resultMap="userMap">
		<include refid="selectColumn"/> where user_id = #{user_id};
	</select>
	
	<update id="updateUserByUserId" parameterType="User">
		UPDATE t_user set user_num = #{user_num},user_realname = #{user_realname},user_department = #{user_department},user_mail =#{user_mail} WHERE user_id = #{user_id};
	</update>
	<update id="updateUserMailByUserId" parameterType="User">
		UPDATE t_user set user_mail =#{user_mail} WHERE user_id = #{user_id};
	</update>

	<update id="updateUserPassword" parameterType="User">
		UPDATE t_user set user_password = #{user_password} WHERE user_id = #{user_id};
	</update>
	
	<update id="updateBorrowNumById" parameterType="User">
		UPDATE t_user set user_borrownum = #{user_borrownum} WHERE user_id = #{user_id};
	</update>
	
	<update id="updateOrderNumById" parameterType="User">
		UPDATE t_user SET user_ordernum = #{user_ordernum} WHERE user_id = #{user_id};
	</update>
	
	<select id="getAllUserRecords" resultType="Integer">
		select count(user_id) from t_user;
	</select>
	
	<select id="getCountByFuzzy" resultType="Integer" parameterType="java.lang.String">
		select count(user_id) from t_user where user_num LIKE CONCAT(CONCAT('%', #{inputString}),'%') or user_realname LIKE CONCAT(CONCAT('%', #{inputString}),'%');
	</select>
	
	<select id="getAllUsers" resultType="Integer">
		<include refid="selectColumn"/>
	</select>
	
	<select id="getPageUserList" resultMap="userMap">
		<include refid="selectColumn"/> limit #{startindex},#{pagesize};
	</select>
	<select id="getUserPageList" resultMap="userMap">
		<include refid="selectColumn"/> limit #{pageIndex},#{pageSize};
	</select>
	
	<select id="getUserPageListByFuzzy" resultMap="userMap" parameterType="java.util.Map">
		<include refid="selectColumn"/> where user_num LIKE CONCAT(CONCAT('%', #{inputString}),'%') or user_realname LIKE CONCAT(CONCAT('%', #{inputString}),'%') limit #{pageIndex},#{pageSize}
	</select>
	
	<select id="getUserListByFuzzy" resultMap="userMap" parameterType="java.util.Map">
		<include refid="selectColumn"/> where user_num LIKE CONCAT(CONCAT('%', #{inputString}),'%') or user_realname LIKE CONCAT(CONCAT('%', #{inputString}),'%');
	</select>
	
	<delete id="delUserList" parameterType="list" >
		DELETE FROM t_user WHERE user_id in
		<foreach collection="list" item="idList"  open="(" separator="," close=")">
			 #{idList}
		</foreach>
	</delete>
	
</mapper>