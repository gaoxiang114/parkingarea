/**
 * 
 */
package com.cyou.library.xh.user.service.impl;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.cyou.library.xh.common.util.Md5ConverterUtil;
import com.cyou.library.xh.common.util.MyException;
import com.cyou.library.xh.common.util.Page;
import com.cyou.library.xh.user.dao.AssignRolesDao;
import com.cyou.library.xh.user.dao.UserDao;
import com.cyou.library.xh.user.domain.AssignRoles;
import com.cyou.library.xh.user.domain.Role;
import com.cyou.library.xh.user.domain.User;
import com.cyou.library.xh.user.service.UserService;

/**
 * @author lirenkui
 *
 */
@Service("userService")
public class UserServiceImpl implements UserService {
	
	@Resource(name="userDao")
	private UserDao userDao;
	@Resource(name = "assignRolesDao")
	private AssignRolesDao assignRolesDao;
	public int addUser(User user,int[] roleId) throws MyException {
		
		AssignRoles  assignRoles =  new AssignRoles();
		if(userDao.getUserByUserNum(user)==null){
			userDao.addUser(user);
			user = userDao.getUserByUserNum(user);
			assignRoles.setUserId(user.getUser_id());
			for(int temp = 0;temp<roleId.length;temp++){
				assignRoles.setRoleId(roleId[temp]);
				assignRolesDao.addAssignRoles(assignRoles);
			}
			return 1;
		}
		else
			throw new MyException("对不起此用户已存在，请重新命名！");
	}

	public User getUserByUserNum(User user) {
		return userDao.getUserByUserNum(user);
	}
	
	public User getUserByUserId(User user) {
		
		user = userDao.getUserByUserId(user);
		List<Role> assignList = null;
		assignList = assignRolesDao.getRolesList(user.getUser_id());
		user.setAssignList(assignList);
		return user;
	}

	public int updateUser(User user) {
		return userDao.updateUserByUserId(user);
	}
	public int updateUserMail(User user) {
		return userDao.updateUserMailByUserId(user);
	}

	public int getAllUserRecords() {
		return userDao.getAllUserRecords();
	}

	public List<User> getPageUserList(Page page) {
		return userDao.getPageUserList(page);
	}

	public int delUserList(List idList) {
		return userDao.delUserList(idList);
	}

	public int updateUserPassword(User user,String oldpwd,String newpwd)/* throws MyException */{
		
	//	if(userDao.getUserByUserId(user).getUser_password().equals(Md5ConverterUtil.Md5(newpwd))){
			user.setUser_password(Md5ConverterUtil.Md5(newpwd));
			return userDao.updateUserPassword(user);
/*		}
		else{
				throw new MyException("原密码输入错误！");
		}*/
	}

	public int getCountByNum(User user) {
		return userDao.getCountByNum(user);
	}

	public int getCountByDepart(User user) {
		return userDao.getCountByDepart(user);
	}

	public List<User> getPageListByNum(Page page) {
		return userDao.getPageListByNum(page);
	}

	public List<User> getPageListByDepart(Page page) {
		return userDao.getPageListByDepart(page);
	}

	public List<User> getAllUsers() {
		return userDao.getAllUsers();
	}

	public List<User> getUserPageList(int pageIndex, int pageSize, User user) {
		
		List<Role> assignList = null;
		List<User> userList = this.userDao.getUserPageList(pageIndex, pageSize, user);
		for(int temp = 0;temp<userList.size();temp++){
			user = userList.get(temp);
			assignList = (List<Role>) assignRolesDao.getRolesList(user.getUser_id());
			user.setAssignList(assignList);
			userList.set(temp, user);
		}
		return userList;
	}

	public int updateBorrowNumById(User user) {
		return this.userDao.updateBorrowNumById(user);
	}

	public List<User> getUserListByFuzzy(int pageIndex,int pageSize,String inputString,User user) {
		return this.userDao.getUserListByFuzzy(pageIndex,pageSize,inputString,user);
	}

	public int getCountByFuzzy(String inputString) {
		return this.userDao.getCountByFuzzy(inputString);
	}
	

}
