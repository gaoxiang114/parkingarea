<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyou.library.xh.user.dao.FunDao">

	<resultMap type="Fun" id="funMap">
	
		<id property="funId" column="fun_id"></id>
		<id property="funName" column="fun_name"></id>
		<id property="fatherId" column="fun_fatherid"></id>
		<id property="funSeq" column="fun_seq" /> 
		<id property="funUrl" column="fun_url"/>
		<id property="funLevel" column="fun_level"/>
		<id property="fatherName" column="fun_fathername"></id>
		<id property="grandid" column="fun_grandid"/>
		
	</resultMap>
	
	<sql id="selectColumn">
		select fun_id,fun_name,fun_fatherid,fun_seq,fun_url,fun_level from t_function
	</sql>	
	<select id="getListByFatherId" resultMap="funMap">
		<include refid="selectColumn"/> where fun_fatherid=#{funId} order by fun_fatherid asc,fun_seq asc;
	</select>

	<select id="getFunByName" parameterType="Fun" resultMap="funMap">
		<include refid="selectColumn"/> where fun_name=#{funName};
	</select>
	<select id="getLength" parameterType="Fun" resultType="Integer">
		select count(fun_id) from t_function where fun_fatherid = #{funId};
	</select>
	
	
	<select id="getSecondLevel" resultMap="funMap">
		select a.fun_id as fun_id,a.fun_name as fun_name,a.fun_fatherid as fun_fatherid,b.fun_name as fun_fathername from t_function as a,t_function as b where a.fun_fatherid = b.fun_id and b.fun_fatherid=0 order by b.fun_id asc;
	</select>
	
	
	<select id="getFunById" resultMap="funMap">
		select a.fun_id as fun_id,a.fun_name as fun_name,a.fun_fatherid as fun_fatherid,b.fun_name as fun_fathername,a.fun_seq as fun_seq,a.fun_url as fun_url from t_function as a , t_function as b where a.fun_id=#{funId} and a.fun_fatherid = b.fun_id;
	</select>
	<select id="getFatherFunById" parameterType="Fun" resultMap="funMap">
		select fun_id,fun_name from t_function where fun_id=#{fatherId};
	</select>
	
	<select id="getThirdLevelFunList" resultMap="funMap">
		select a.fun_id as fun_id,a.fun_name as fun_name,d.fun_name as fun_fathername, d.fun_fatherid as fun_fatherid  from t_function a left join t_function  d on a.fun_fatherid = d.fun_id where a.fun_level=3;
	</select>
	<select id="getThirdLevelFunLists" resultMap="funMap" parameterType="java.util.Map">
		select a.fun_id as fun_id,a.fun_name as fun_name,d.fun_name as fun_fathername, d.fun_fatherid as fun_fatherid  from t_function a left join t_function  d on a.fun_fatherid = d.fun_id where a.fun_level=3 limit #{pageIndex},#{pageSize};
	</select>
	
	<select id="getFunByFatherId" parameterType="Fun" resultMap="funMap">
		select a.fun_id as fun_id,a.fun_name as fun_name,a.fun_fatherid as fun_fatherid,b.fun_name as fun_fathername,a.fun_seq as fun_seq,a.fun_url as fun_url from t_function as a , t_function as b where a.fun_id=#{fatherId} and a.fun_fatherid = b.fun_id;
	</select>
	
	<select id="getThirdLevelCount" resultType="int">
		select count(fun_id) from t_function where fun_level = 3;
	</select>
	
	<update id="updateFun" parameterType="Fun">
		UPDATE t_function SET fun_name = #{funName},fun_fatherid=#{fatherId},fun_seq=#{funSeq},fun_url=#{funUrl} WHERE fun_id = #{funId};
	</update>

	<insert id="addFun" parameterType="Fun">
		insert into t_function(fun_name,fun_fatherid,fun_seq,fun_url) values (#{funName},#{fatherId},#{funSeq},#{funUrl});
	</insert>
</mapper>